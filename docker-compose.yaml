name: voting-app
services:
    client:
        container_name: catdog-client
        build: client/
        restart: always
        ports:
            - 8080:80
        depends_on:
            - postgres
            - redis
            - worker
    nodejs:
        container_name: catdog-nodejs
        build: server/
        restart: always
        ports:
            - 3000:3000
        depends_on:
            - postgres
            - redis
            - worker
        environment:
            POSTGRES_USER: "${DBUSER}"
            POSTGRES_PASSWORD: "${DBPASSWORD}"
            POSTGRES_DB: "${DBNAME}"
            POSTGRES_HOST: "${DBHOST}"

    worker:
        container_name: catdog-worker
        build: worker/
        restart: always
        depends_on:
            postgres:
                condition: service_healthy
            redis:
                condition: service_started
        environment:
            POSTGRES_USER: "${DBUSER}"
            POSTGRES_PASSWORD: "${DBPASSWORD}"
            POSTGRES_DB: "${DBNAME}"
            POSTGRES_HOST: "${DBHOST}"

    postgres:
        container_name: catdog-postgres
        image: postgres
        restart: always
        volumes:
            - ~/.docker/volumes/postgres/:/var/lib/postgresql/data/
        environment:
            POSTGRES_USER: "${DBUSER}"
            POSTGRES_PASSWORD: "${DBPASSWORD}"
            POSTGRES_DB: "${DBNAME}"
            POSTGRES_HOST: "${DBHOST}"
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U ${DBUSER}"]
            interval: 10s
            timeout: 3s
            start_period: 60s
            retries: 5

    redis:
        container_name: catdog-redis
        image: redis
        restart: always
        volumes:
            - ~/.docker/volumes/redis/:/data/
